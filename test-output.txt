
[1m[7m[36m RUN [39m[27m[22m [36mv2.1.8 [39m[90mC:/Users/ejb50/Websites/systemprompt-voice-mcp[39m

 [32mâœ“[39m src/features/server/__tests__/ToolsSection.test.tsx[2m > [22mToolsSection[2m > [22mrenders tools correctly
 [32mâœ“[39m src/features/server/__tests__/ToolsSection.test.tsx[2m > [22mToolsSection[2m > [22mhandles empty tools state
 [32mâœ“[39m src/features/server/__tests__/ToolsSection.test.tsx[2m > [22mToolsSection[2m > [22mshows error state correctly
 [32mâœ“[39m src/features/server/__tests__/ToolsSection.test.tsx[2m > [22mToolsSection[2m > [22mexecutes tool with parameters
 [32mâœ“[39m src/features/server/__tests__/ToolsSection.test.tsx[2m > [22mToolsSection[2m > [22mshows execution history after successful execution
 [32mâœ“[39m src/features/server/__tests__/ToolsSection.test.tsx[2m > [22mToolsSection[2m > [22mhandles tool execution errors
 [32mâœ“[39m src/features/server/__tests__/ToolsSection.test.tsx[2m > [22mToolsSection[2m > [22mvalidates required parameters
 [32mâœ“[39m src/features/multimodal-agent/__tests__/contexts/LiveAPIContext.test.tsx[2m > [22mLiveAPIProvider[2m > [22mrenders children correctly
 [32mâœ“[39m src/features/multimodal-agent/__tests__/contexts/LiveAPIContext.test.tsx[2m > [22mLiveAPIProvider[2m > [22mthrows error when API key is not set
 [32mâœ“[39m src/features/multimodal-agent/__tests__/contexts/LiveAPIContext.test.tsx[2m > [22mLiveAPIProvider[2m > [22mexecutes tool action successfully
 [32mâœ“[39m src/features/multimodal-agent/__tests__/contexts/LiveAPIContext.test.tsx[2m > [22mLiveAPIProvider[2m > [22mhandles filesystem tool separately
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22minitialization[2m > [22mshould start with empty logs
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22minitialization[2m > [22mshould have default maxLogs of 500
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22maddLog[2m > [22mshould add a tool log
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22maddLog[2m > [22mshould add a prompt log
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22maddLog[2m > [22mshould add a multimodal log
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22maddLog[2m > [22mshould handle error logs
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22maddLog[2m > [22mshould increment count for duplicate logs
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22maddLog[2m > [22mshould respect maxLogs limit
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22mclearLogs[2m > [22mshould clear all logs
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22msetMaxLogs[2m > [22mshould update maxLogs
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22msetMaxLogs[2m > [22mshould trim existing logs when reducing maxLogs
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22mlog deduplication[2m > [22mshould not deduplicate logs with different parameters
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22mlog deduplication[2m > [22mshould not deduplicate logs with different messages
 [32mâœ“[39m src/stores/__tests__/log-store.test.ts[2m > [22museLogStore[2m > [22mlog deduplication[2m > [22mshould deduplicate identical logs and maintain order
 [32mâœ“[39m src/features/server/__tests__/ServerCapabilities.test.tsx[2m > [22mServer Capabilities[2m > [22mshould display all enabled capabilities from server info
 [32mâœ“[39m src/features/server/__tests__/ServerCapabilities.test.tsx[2m > [22mServer Capabilities[2m > [22mshould not display disabled capabilities
 [32mâœ“[39m src/features/server/__tests__/ServerCapabilities.test.tsx[2m > [22mServer Capabilities[2m > [22mshould handle empty capabilities object
 [32mâœ“[39m src/features/server/__tests__/ServerCapabilities.test.tsx[2m > [22mServer Capabilities[2m > [22mshould properly render capabilities from McpProvider
 [32mâœ“[39m src/features/server/__tests__/ServerCapabilities.test.tsx[2m > [22mServer Capabilities[2m > [22mshould properly set capabilities in McpProvider after connection
 [32mâœ“[39m src/features/server/__tests__/ServerCapabilities.test.tsx[2m > [22mServer Capabilities[2m > [22mshould use default capabilities when server returns none
 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /config[2m > [22mshould return server configuration
 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /config[2m > [22mshould return server configuration
 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /config[2m > [22mshould handle errors gracefully
[90mstdout[2m | proxy/src/__tests__/server.test.ts[2m > [22m[2mProxyServer[2m > [22m[2mGET /sse[2m > [22m[2mshould return 500 when serverId is missing
[22m[39mHandling SSE request
Creating transport with query: {}

 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /config[2m > [22mshould handle errors gracefully
 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /sse[2m > [22mshould return 500 when serverId is missing
[90mstdout[2m | proxy/src/__tests__/server.test.ts[2m > [22m[2mProxyServer[2m > [22m[2mGET /sse[2m > [22m[2mshould return 500 for invalid transport type
[22m[39mHandling SSE request
Creating transport with query: { serverId: [32m'test'[39m, transportType: [32m'invalid'[39m }

 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /sse[2m > [22mshould return 500 when serverId is missing
 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /sse[2m > [22mshould return 500 for invalid transport type
[90mstdout[2m | proxy/src/__tests__/server.test.ts[2m > [22m[2mProxyServer[2m > [22m[2mGET /sse[2m > [22m[2mshould handle transport errors
[22m[39mHandling SSE request
Creating transport with query: { serverId: [32m'test'[39m, transportType: [32m'stdio'[39m }
Setting up stdio transport
Starting stdio transport

 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /sse[2m > [22mshould return 500 for invalid transport type
 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /sse[2m > [22mshould handle transport errors
[90mstdout[2m | proxy/src/__tests__/server.test.ts[2m > [22m[2mProxyServer[2m > [22m[2mPOST /message[2m > [22m[2mshould return 404 when session is not found
[22m[39mHandling message request
Session not found: non-existent

 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mGET /sse[2m > [22mshould handle transport errors
 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mPOST /message[2m > [22mshould return 404 when session is not found
 [32mâœ“[39m proxy/src/__tests__/server.test.ts[2m > [22mProxyServer[2m > [22mPOST /message[2m > [22mshould return 404 when session is not found
 [32mâœ“[39m src/providers/gemini/__tests__/implementation.test.ts[2m > [22mgenerateLlmResponse[2m > [22mshould use the correct Gemini model
 [32mâœ“[39m src/providers/gemini/__tests__/implementation.test.ts[2m > [22mgenerateLlmResponse[2m > [22mshould successfully generate a response from text message
 [32mâœ“[39m src/providers/gemini/__tests__/implementation.test.ts[2m > [22mgenerateLlmResponse[2m > [22mshould handle resource type messages
 [32mâœ“[39m src/providers/gemini/__tests__/implementation.test.ts[2m > [22mgenerateLlmResponse[2m > [22mshould handle multiple messages
 [32mâœ“[39m src/providers/gemini/__tests__/implementation.test.ts[2m > [22mgenerateLlmResponse[2m > [22mshould handle empty response from API
 [32mâœ“[39m src/providers/gemini/__tests__/implementation.test.ts[2m > [22mgenerateLlmResponse[2m > [22mshould handle API errors
 [32mâœ“[39m src/providers/gemini/__tests__/implementation.test.ts[2m > [22mgenerateLlmResponse[2m > [22mshould handle empty messages array
 [32mâœ“[39m src/providers/gemini/__tests__/implementation.test.ts[2m > [22mgenerateLlmResponse[2m > [22mshould handle messages with invalid content
 [32mâœ“[39m src/providers/gemini/__tests__/implementation.test.ts[2m > [22mgenerateLlmResponse[2m > [22mshould handle messages with mixed valid and invalid content
 [32mâœ“[39m src/features/multimodal-agent/__tests__/components/ConfigCard.test.tsx[2m > [22mConfigCard[2m > [22mrenders configuration correctly
 [32mâœ“[39m src/features/multimodal-agent/__tests__/components/ConfigCard.test.tsx[2m > [22mConfigCard[2m > [22mrenders built-in tools correctly
 [32mâœ“[39m src/features/multimodal-agent/__tests__/components/ConfigCard.test.tsx[2m > [22mConfigCard[2m > [22mrenders MCP tools correctly
 [32mâœ“[39m src/features/multimodal-agent/__tests__/components/ConfigCard.test.tsx[2m > [22mConfigCard[2m > [22mhandles missing configuration gracefully
 [32mâœ“[39m src/features/multimodal-agent/__tests__/components/ConfigCard.test.tsx[2m > [22mConfigCard[2m > [22mhandles empty tools list gracefully
 [32mâœ“[39m src/features/server/__tests__/ServerPageContent.test.tsx[2m > [22mServerPageContent[2m > [22mrenders the tools section when tools are available
 [32mâœ“[39m src/features/server/__tests__/ServerPageContent.test.tsx[2m > [22mServerPageContent[2m > [22mrenders empty tools section when no tools are available
 [32mâœ“[39m src/features/server/__tests__/ServerPageContent.test.tsx[2m > [22mServerPageContent[2m > [22mrenders error state when there is an error
 [32mâœ“[39m src/features/server/__tests__/ServerPageContent.test.tsx[2m > [22mServerPageContent[2m > [22mshows refresh button when tools capability exists without listChanged
 [32mâœ“[39m src/features/server/__tests__/ServerPageContent.test.tsx[2m > [22mServerPageContent[2m > [22mhides prompts and resources sections when server lacks capabilities
 [32mâœ“[39m src/features/server/__tests__/ServerPageContent.test.tsx[2m > [22mServerPageContent[2m > [22mshows prompts and resources sections when server has capabilities
[90mstdout[2m | src/features/multimodal-agent/__tests__/lib/multimodal-live-client.test.ts[2m > [22m[2mMultimodalLiveClient[2m > [22m[2mhandles disconnection
[22m[39mCloseEvent { isTrusted: [36m[Getter][39m }

[90mstdout[2m | src/features/multimodal-agent/__tests__/lib/multimodal-live-client.test.ts[2m > [22m[2mMultimodalLiveClient[2m > [22m[2msends realtime input
[22m[39msendRealtimeInput [ { data: [32m'test-data'[39m, mimeType: [32m'audio/wav'[39m } ]

 [32mâœ“[39m src/features/multimodal-agent/__tests__/lib/multimodal-live-client.test.ts[2m > [22mMultimodalLiveClient[2m > [22msends setup message on connect
 [32mâœ“[39m src/features/multimodal-agent/__tests__/lib/multimodal-live-client.test.ts[2m > [22mMultimodalLiveClient[2m > [22memits log events
 [32mâœ“[39m src/features/multimodal-agent/__tests__/lib/multimodal-live-client.test.ts[2m > [22mMultimodalLiveClient[2m > [22mhandles disconnection
 [32mâœ“[39m src/features/multimodal-agent/__tests__/lib/multimodal-live-client.test.ts[2m > [22mMultimodalLiveClient[2m > [22msends client content
 [32mâœ“[39m src/features/multimodal-agent/__tests__/lib/multimodal-live-client.test.ts[2m > [22mMultimodalLiveClient[2m > [22msends realtime input
 [32mâœ“[39m src/features/multimodal-agent/__tests__/lib/multimodal-live-client.test.ts[2m > [22mMultimodalLiveClient[2m > [22msends tool response
[90mstdout[2m | src/features/agent-registry/__tests__/AgentRegistryContext.test.tsx[2m > [22m[2mAgentRegistryContext[2m > [22m[2mshould save new agent
[22m[39mLoading agent configuration...
Loaded agents: [
  {
    name: [32m'TestAgent1'[39m,
    description: [32m'Test agent 1'[39m,
    instruction: [32m'Test instruction 1'[39m,
    knowledge: [32m'Test knowledge 1'[39m,
    config: {
      model: [32m'models/gemini-2.0-flash-exp'[39m,
      generationConfig: [36m[Object][39m
    },
    dependencies: [],
    tools: [],
    voice: [32m'Kore'[39m
  }
]
Loading agent configuration...
Loaded agents: [
  {
    name: [32m'TestAgent1'[39m,
    description: [32m'Test agent 1'[39m,
    instruction: [32m'Test instruction 1'[39m,
    knowledge: [32m'Test knowledge 1'[39m,
    config: {
      model: [32m'models/gemini-2.0-flash-exp'[39m,
      generationConfig: [36m[Object][39m
    },
    dependencies: [],
    tools: [],
    voice: [32m'Kore'[39m
  }
]

[90mstdout[2m | src/features/agent-registry/__tests__/AgentRegistryContext.test.tsx[2m > [22m[2mAgentRegistryContext[2m > [22m[2mshould save new agent
[22m[39mSaving agent: NewAgent
Agent saved successfully

[90mstdout[2m | src/features/agent-registry/__tests__/AgentRegistryContext.test.tsx[2m > [22m[2mAgentRegistryContext[2m > [22m[2mshould handle multiple agents
[22m[39mLoading agent configuration...
Loaded agents: [
  {
    name: [32m'TestAgent1'[39m,
    description: [32m'Test agent 1'[39m,
    instruction: [32m'Test instruction 1'[39m,
    knowledge: [32m'Test knowledge 1'[39m,
    config: {
      model: [32m'models/gemini-2.0-flash-exp'[39m,
      generationConfig: [36m[Object][39m
    },
    dependencies: [],
    tools: [],
    voice: [32m'Kore'[39m
  }
]
Loading agent configuration...
Loaded agents: [
  {
    name: [32m'TestAgent1'[39m,
    description: [32m'Test agent 1'[39m,
    instruction: [32m'Test instruction 1'[39m,
    knowledge: [32m'Test knowledge 1'[39m,
    config: {
      model: [32m'models/gemini-2.0-flash-exp'[39m,
      generationConfig: [36m[Object][39m
    },
    dependencies: [],
    tools: [],
    voice: [32m'Kore'[39m
  }
]

 [32mâœ“[39m src/features/agent-registry/__tests__/AgentRegistryContext.test.tsx[2m > [22mAgentRegistryContext[2m > [22mshould save new agent
[90mstdout[2m | src/features/agent-registry/__tests__/AgentRegistryContext.test.tsx[2m > [22m[2mAgentRegistryContext[2m > [22m[2mshould handle multiple agents
[22m[39mSaving agent: TestAgent2
Agent saved successfully

 [32mâœ“[39m src/features/agent-registry/__tests__/AgentRegistryContext.test.tsx[2m > [22mAgentRegistryContext[2m > [22mshould handle multiple agents
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mgetServerType[2m > [22mshould identify SSE servers
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mgetServerType[2m > [22mshould identify stdio servers
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mgetRawServerConfig[2m > [22mshould get SSE server config
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mgetRawServerConfig[2m > [22mshould get stdio server config
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mgetRawServerConfig[2m > [22mshould return undefined for unknown server
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mbuildServerMetadata[2m > [22mshould build connected SSE server metadata
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mbuildServerMetadata[2m > [22mshould build unconnected SSE server metadata
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mbuildServerMetadata[2m > [22mshould override with runtime metadata when connected
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mformatServerLabel[2m > [22mshould format server ID when no name provided
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mformatServerLabel[2m > [22mshould use provided name when available
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mgetServerConfig[2m > [22mshould generate sidebar item for connected server
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mgetServerConfig[2m > [22mshould generate sidebar item for unconnected server
 [32mâœ“[39m config/__tests__/server.config.test.ts[2m > [22mServer Configuration[2m > [22mgetServerConfig[2m > [22mshould handle unknown server gracefully
 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-items.test.tsx[2m > [22museSidebarItems[2m > [22mshould use correct default icons for server types
 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-items.test.tsx[2m > [22museSidebarItems[2m > [22mshould respect custom metadata icons when provided
[90mstdout[2m | src/providers/gemini/__tests__/hook.test.tsx[2m > [22m[2museGeminiProvider[2m > [22m[2mshould handle executePrompt success
[22m[39mGemini Provider - Execute Prompt Start {
  name: [32m'test'[39m,
  messages: [ { role: [32m'user'[39m, content: [36m[Object][39m } ],
  params: [90mundefined[39m,
  config: [90mundefined[39m
}
Gemini Provider - Execute Prompt End

[90mstdout[2m | src/providers/gemini/__tests__/hook.test.tsx[2m > [22m[2museGeminiProvider[2m > [22m[2mshould handle executePrompt error
[22m[39mGemini Provider - Execute Prompt Start {
  name: [32m'test'[39m,
  messages: [ { role: [32m'user'[39m, content: [36m[Object][39m } ],
  params: [90mundefined[39m,
  config: [90mundefined[39m
}
Gemini Provider - Execute Prompt End

[90mstdout[2m | src/providers/gemini/__tests__/hook.test.tsx[2m > [22m[2museGeminiProvider[2m > [22m[2mshould validate messages
[22m[39mGemini Provider - Execute Prompt Start { name: [32m'test'[39m, messages: [], params: [90mundefined[39m, config: [90mundefined[39m }

 [32mâœ“[39m src/providers/gemini/__tests__/hook.test.tsx[2m > [22museGeminiProvider[2m > [22mshould register provider on mount
 [32mâœ“[39m src/providers/gemini/__tests__/hook.test.tsx[2m > [22museGeminiProvider[2m > [22mshould unregister provider on unmount
 [32mâœ“[39m src/providers/gemini/__tests__/hook.test.tsx[2m > [22museGeminiProvider[2m > [22mshould handle executePrompt success
 [32mâœ“[39m src/providers/gemini/__tests__/hook.test.tsx[2m > [22museGeminiProvider[2m > [22mshould handle executePrompt error
 [32mâœ“[39m src/providers/gemini/__tests__/hook.test.tsx[2m > [22museGeminiProvider[2m > [22mshould validate messages
 [32mâœ“[39m src/features/server/__tests__/PromptsSection.test.tsx[2m > [22mPromptsSection[2m > [22mshould view prompt details successfully
 [32mâœ“[39m src/features/server/__tests__/PromptsSection.test.tsx[2m > [22mPromptsSection[2m > [22mshould handle errors
 [32mâœ“[39m src/features/server/hooks/__tests__/useMcpPrompt.test.ts[2m > [22museMcpPrompt[2m > [22mshould indicate availability when client is connected
 [32mâœ“[39m src/features/server/hooks/__tests__/useMcpPrompt.test.ts[2m > [22museMcpPrompt[2m > [22mshould indicate unavailability when client is disconnected
 [32mâœ“[39m src/features/server/hooks/__tests__/useMcpPrompt.test.ts[2m > [22museMcpPrompt[2m > [22mshould indicate loading state when client is pending
 [32mâœ“[39m src/features/server/hooks/__tests__/useMcpPrompt.test.ts[2m > [22museMcpPrompt[2m > [22mshould get prompt details successfully
 [32mâœ“[39m src/features/server/hooks/__tests__/useMcpPrompt.test.ts[2m > [22museMcpPrompt[2m > [22mshould throw error when client is not available
 [32mâœ“[39m src/features/server/__tests__/ServerPage.test.tsx[2m > [22mServerPage[2m > [22mdisplays server information when connected
 [32mâœ“[39m src/features/server/__tests__/ServerPage.test.tsx[2m > [22mServerPage[2m > [22mshows server not found when serverId is missing
 [32mâœ“[39m src/features/server/__tests__/ServerPage.test.tsx[2m > [22mServerPage[2m > [22mshows loading state
 [32mâœ“[39m src/features/server/__tests__/ServerPage.test.tsx[2m > [22mServerPage[2m > [22mshows error state
 [32mâœ“[39m src/features/server/__tests__/ServerPage.test.tsx[2m > [22mServerPage[2m > [22mshows disconnected state
 [32mâœ“[39m src/features/server/__tests__/ServerInfo.test.tsx[2m > [22mServerInfo[2m > [22mdisplays server information correctly
 [32mâœ“[39m src/features/server/__tests__/ServerInfo.test.tsx[2m > [22mServerInfo[2m > [22mhandles empty capabilities gracefully
 [32mâœ“[39m src/features/server/__tests__/ServerInfo.test.tsx[2m > [22mServerInfo[2m > [22mhandles undefined server info gracefully
[90mstdout[2m | src/components/sidebar/__tests__/sidebar-item.test.tsx[2m > [22m[2mSidebarItem[2m > [22m[2mshould apply compact styles in compact mode
[22m[39mButton classes: z-0 group relative inline-flex items-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 text-small [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-transparent text-default-foreground data-[hover=true]:bg-default/40 h-12 gap-2 rounded-lg hover:bg-content2 min-w-0 w-[48px] justify-center p-0

 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-item.test.tsx[2m > [22mSidebarItem[2m > [22mshould render with correct label
 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-item.test.tsx[2m > [22mSidebarItem[2m > [22mshould render icon when provided
 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-item.test.tsx[2m > [22mSidebarItem[2m > [22mshould handle missing icon gracefully
 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-item.test.tsx[2m > [22mSidebarItem[2m > [22mshould show tooltip in compact mode with description
 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-item.test.tsx[2m > [22mSidebarItem[2m > [22mshould not show tooltip in compact mode without description
 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-item.test.tsx[2m > [22mSidebarItem[2m > [22mshould handle click events
 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-item.test.tsx[2m > [22mSidebarItem[2m > [22mshould apply selected styles when selected
 [32mâœ“[39m src/components/sidebar/__tests__/sidebar-item.test.tsx[2m > [22mSidebarItem[2m > [22mshould apply compact styles in compact mode
 [32mâœ“[39m src/features/server/__tests__/usePrompts.test.ts[2m > [22musePrompts[2m > [22mhandles execute prompt correctly
 [32mâœ“[39m src/features/server/__tests__/usePrompts.test.ts[2m > [22musePrompts[2m > [22mhandles view prompt correctly
 [32mâœ“[39m src/features/server/__tests__/usePrompts.test.ts[2m > [22musePrompts[2m > [22mhandles loading state correctly
 [32mâœ“[39m src/features/server/hooks/__tests__/useParameters.test.ts[2m > [22museParameters[2m > [22mshould initialize with empty values and no errors
 [32mâœ“[39m src/features/server/hooks/__tests__/useParameters.test.ts[2m > [22museParameters[2m > [22mshould update parameter value
 [32mâœ“[39m src/features/server/hooks/__tests__/useParameters.test.ts[2m > [22museParameters[2m > [22mshould validate required parameters
 [32mâœ“[39m src/features/server/hooks/__tests__/useParameters.test.ts[2m > [22museParameters[2m > [22mshould clear validation error when parameter is set
 [32mâœ“[39m src/features/server/hooks/__tests__/useParameters.test.ts[2m > [22museParameters[2m > [22mshould reset values and errors
 [32mâœ“[39m src/features/server/hooks/__tests__/useParameters.test.ts[2m > [22museParameters[2m > [22mshould set multiple values at once
 [32mâœ“[39m src/features/server/hooks/__tests__/useParameters.test.ts[2m > [22museParameters[2m > [22mshould validate successfully when required fields are filled
 [32mâœ“[39m src/features/server/hooks/__tests__/usePromptLogger.test.ts[2m > [22musePromptLogger[2m > [22mshould log success with all parameters
 [32mâœ“[39m src/features/server/hooks/__tests__/usePromptLogger.test.ts[2m > [22musePromptLogger[2m > [22mshould log success without optional parameters
 [32mâœ“[39m src/features/server/hooks/__tests__/usePromptLogger.test.ts[2m > [22musePromptLogger[2m > [22mshould log error with Error object
 [32mâœ“[39m src/features/server/hooks/__tests__/usePromptLogger.test.ts[2m > [22musePromptLogger[2m > [22mshould log error with string message
 [32mâœ“[39m src/features/server/hooks/__tests__/usePromptLogger.test.ts[2m > [22musePromptLogger[2m > [22mshould log custom entry
 [32mâœ“[39m src/features/server/hooks/__tests__/useLlmPrompt.test.ts[2m > [22museLlmPrompt[2m > [22mshould execute prompt successfully
 [32mâœ“[39m src/features/server/hooks/__tests__/useLlmPrompt.test.ts[2m > [22museLlmPrompt[2m > [22mshould throw error when messages are not available
 [32mâœ“[39m src/features/server/hooks/__tests__/useLlmPrompt.test.ts[2m > [22museLlmPrompt[2m > [22mshould expose loading state from LLM provider
 [32mâœ“[39m src/features/server/hooks/__tests__/useLlmPrompt.test.ts[2m > [22museLlmPrompt[2m > [22mshould handle execution errors
 [32mâœ“[39m src/features/llm-registry/__tests__/LlmRegistryContext.test.tsx[2m > [22mLlmRegistryContext[2m > [22mshould throw error when used outside provider
 [32mâœ“[39m src/features/llm-registry/__tests__/LlmRegistryContext.test.tsx[2m > [22mLlmRegistryContext[2m > [22mshould provide registry context when used within provider
 [32mâœ“[39m src/features/llm-registry/__tests__/LlmRegistryContext.test.tsx[2m > [22mLlmRegistryContext[2m > [22mshould register and unregister providers
[90mstdout[2m | src/features/llm-registry/__tests__/LlmRegistryContext.test.tsx[2m > [22m[2mLlmRegistryContext[2m > [22m[2mshould provide registry context when used within provider
[22m[39mLoading LLM configuration...
Registry state updated: { activeProvider: [1mnull[22m, providers: [], providerConfig: {} }

[90mstdout[2m | src/features/llm-registry/__tests__/LlmRegistryContext.test.tsx[2m > [22m[2mLlmRegistryContext[2m > [22m[2mshould register and unregister providers
[22m[39mLoading LLM configuration...
Registry state updated: { activeProvider: [1mnull[22m, providers: [], providerConfig: {} }
Registering provider: test-provider Test Provider
Adding new provider: test-provider
Registry state updated: {
  activeProvider: [1mnull[22m,
  providers: [ [32m'test-provider'[39m ],
  providerConfig: {}
}
Getting provider instance: test-provider found
Unregistering provider: test-provider
Registry state updated: { activeProvider: [1mnull[22m, providers: [], providerConfig: {} }
Getting provider instance: test-provider not found

[90mstdout[2m | src/features/llm-registry/__tests__/LlmRegistryContext.test.tsx
[22m[39mLoaded config: {
  provider: [32m'gemini'[39m,
  config: {
    apiKey: [32m'AIzaSyDZQFcH0E0UCdxtZUnWCaZKoGf9m4ekURM'[39m,
    model: [32m'gemini-2.0-flash-exp'[39m,
    temperature: [33m0.7[39m,
    maxTokens: [33m100000[39m
  }
}
Setting active provider: gemini
Loaded config: {
  provider: [32m'gemini'[39m,
  config: {
    apiKey: [32m'AIzaSyDZQFcH0E0UCdxtZUnWCaZKoGf9m4ekURM'[39m,
    model: [32m'gemini-2.0-flash-exp'[39m,
    temperature: [33m0.7[39m,
    maxTokens: [33m100000[39m
  }
}
Setting active provider: gemini

 [32mâœ“[39m src/components/StatusIndicator/__tests__/StatusIndicator.test.tsx[2m > [22mStatusIndicator[2m > [22mrenders with default props
 [32mâœ“[39m src/components/StatusIndicator/__tests__/StatusIndicator.test.tsx[2m > [22mStatusIndicator[2m > [22mrenders with description
 [32mâœ“[39m src/components/StatusIndicator/__tests__/StatusIndicator.test.tsx[2m > [22mStatusIndicator[2m > [22mrenders with custom type
 [32mâœ“[39m src/components/StatusIndicator/__tests__/StatusIndicator.test.tsx[2m > [22mStatusIndicator[2m > [22mrenders with custom icon
 [32mâœ“[39m src/components/Card/__tests__/ServerCard.test.tsx[2m > [22mServerCard[2m > [22mrenders server name and ID
 [32mâœ“[39m src/components/Card/__tests__/ServerCard.test.tsx[2m > [22mServerCard[2m > [22mshows connected status with primary color
 [32mâœ“[39m src/components/Card/__tests__/ServerCard.test.tsx[2m > [22mServerCard[2m > [22mshows disconnected status with default color
 [32mâœ“[39m src/components/Card/__tests__/ServerCard.test.tsx[2m > [22mServerCard[2m > [22mrenders children content
 [32mâœ“[39m src/features/server/hooks/__tests__/useModal.test.ts[2m > [22museModal[2m > [22mshould initialize with closed state
 [32mâœ“[39m src/features/server/hooks/__tests__/useModal.test.ts[2m > [22museModal[2m > [22mshould open modal with specified mode
 [32mâœ“[39m src/features/server/hooks/__tests__/useModal.test.ts[2m > [22museModal[2m > [22mshould close modal and reset mode
 [32mâœ“[39m src/features/server/hooks/__tests__/useModal.test.ts[2m > [22museModal[2m > [22mshould handle multiple open/close cycles
 [32mâœ“[39m src/features/server/__tests__/PromptCard.test.tsx[2m > [22mPromptCard[2m > [22mrenders prompt information correctly
 [32mâœ“[39m src/features/server/__tests__/PromptCard.test.tsx[2m > [22mPromptCard[2m > [22mcalls onExecute when execute button is clicked
 [32mâœ“[39m src/features/server/__tests__/PromptCard.test.tsx[2m > [22mPromptCard[2m > [22mcalls onView when view button is clicked
 [32mâœ“[39m src/features/server/__tests__/PromptCard.test.tsx[2m > [22mPromptCard[2m > [22mdisables execute button when loading
 [32mâœ“[39m src/features/multimodal-agent/__tests__/contexts/McpContext.test.tsx[2m > [22mMcpProvider[2m > [22mrenders children
 [32mâœ“[39m src/features/multimodal-agent/__tests__/contexts/McpContext.test.tsx[2m > [22mMcpProvider[2m > [22minitializes with empty state
 [32mâœ“[39m src/components/Card/__tests__/ToolCard.test.tsx[2m > [22mToolCard[2m > [22mrenders with default props
 [32mâœ“[39m src/components/Card/__tests__/ToolCard.test.tsx[2m > [22mToolCard[2m > [22muses custom tool type
 [32mâœ“[39m src/components/Card/__tests__/ToolCard.test.tsx[2m > [22mToolCard[2m > [22mrenders children content

[2m Test Files [22m [1m[32m29 passed[39m[22m[90m (29)[39m
[2m      Tests [22m [1m[32m151 passed[39m[22m[90m (151)[39m
[2m   Start at [22m 22:58:06
[2m   Duration [22m 6.07s[2m (transform 626ms, setup 452ms, collect 2.57s, tests 1.86s, environment 497ms, prepare 95ms)[22m

